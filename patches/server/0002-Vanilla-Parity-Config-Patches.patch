From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: bitbloxhub <45184892+bitbloxhub@users.noreply.github.com>
Date: Thu, 26 Jan 2023 12:57:17 -0800
Subject: [PATCH] Vanilla Parity Config Patches


diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index 6bf14183a3fcd2b3d166752ce33240d2ff1ffa7c..23ac155358921f313e41bd3209c40035e644915a 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -146,14 +146,14 @@ public class GlobalConfiguration extends ConfigurationPart {
 
     public class UnsupportedSettings extends ConfigurationPart {
         @Comment("This setting controls if players should be able to break bedrock, end portals and other intended to be permanent blocks.")
-        public boolean allowPermanentBlockBreakExploits = false;
+        public boolean allowPermanentBlockBreakExploits = true; // Chika
         @Comment("This setting controls if player should be able to use TNT duplication, but this also allows duplicating carpet, rails and potentially other items")
-        public boolean allowPistonDuplication = false;
+        public boolean allowPistonDuplication = true; // Chika
         public boolean performUsernameValidation = true;
         @Comment("This setting controls if players should be able to create headless pistons.")
-        public boolean allowHeadlessPistons = false;
+        public boolean allowHeadlessPistons = true; // Chika
         @Comment("This setting controls if grindstones should be able to output overstacked items (such as cursed books).")
-        public boolean allowGrindstoneOverstacking = false;
+        public boolean allowGrindstoneOverstacking = true; // Chika
     }
 
     public Commands commands;
diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 4532f3a0d74feae0a1249b53e1bfbc18a8808b32..3cd881d308c3f34665409921e16f83b52babbd67 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -460,7 +460,7 @@ public class WorldConfiguration extends ConfigurationPart {
         public int lightQueueSize = 20;
         public boolean updatePathfindingOnBlockUpdate = true;
         public boolean showSignClickCommandFailureMsgsToPlayer = false;
-        public RedstoneImplementation redstoneImplementation = RedstoneImplementation.VANILLA;
+        public RedstoneImplementation redstoneImplementation = RedstoneImplementation.ALTERNATE_CURRENT;
         public boolean disableEndCredits = false;
         public float maxLeashDistance = 10f;
         public boolean disableSprintInterruptionOnAttack = false;
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index 4cd080a0db99a5c36394bcf54526b96fe22a206a..c100047bc68c15feee0d5f8be1738909d1fdc22c 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -924,7 +924,7 @@ public class PurpurWorldConfig {
         furnaceUseLavaFromUnderneath = getBoolean("blocks.furnace.use-lava-from-underneath", furnaceUseLavaFromUnderneath);
     }
 
-    public boolean endPortalSafeTeleporting = true;
+    public boolean endPortalSafeTeleporting = false;
     private void endPortalSettings() {
         endPortalSafeTeleporting = getBoolean("blocks.end_portal.safe-teleporting", endPortalSafeTeleporting);
     }
@@ -992,7 +992,7 @@ public class PurpurWorldConfig {
         }
     }
 
-    public boolean fixSandDuping = true;
+    public boolean fixSandDuping = false;
     private void sandSettings() {
         fixSandDuping = getBoolean("blocks.sand.fix-duping", fixSandDuping);
     }
